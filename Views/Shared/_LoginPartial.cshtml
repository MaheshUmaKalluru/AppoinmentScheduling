@inject Microsoft.AspNetCore.Identity.SignInManager<AppoinmentScheduling.Models.ApplicationUser> signInManager
@if (signInManager.IsSignedIn(User))
{
    @*     <form method="post" id="logoutForm" asp-action="Logoff" asp-controller="Account">

             <ul class="nav navnar-nav">
                 <li class="text-white nav-link">Hello, @User.Identity.Name!!</li>
                 <li><a  class="text-white nav-link" href="javascript:document.getElementById('logoutForm').submit">Log Off</a></li>

             </ul>
        </form>
    *@


}
else
{
    <ul class="nav navbar-nav">

        <li class="nav item">
            <a class="nav-link text-white" id="registerlink" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        @* <li>@Html.ActionLink("Sign Up", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@

        <li>@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginlink" })</li>


    </ul>
}


                </div>
            </div>
        </nav>